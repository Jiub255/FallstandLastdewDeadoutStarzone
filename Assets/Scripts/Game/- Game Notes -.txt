_______________________________________________________________________________________________________

    
                           _________    _____     ______       _____
                               |       /     \    |     \     /     \    *
                               |      |       |   |      |   |       |
                               |      |       |   |      |   |       |   *
                               |       \_____/    |_____/     \_____/


-------------------------------------------------------------------------------------------------------

FIRST!!


    Setup stats panel in Character panel in Equipment tab in Inventory canvas. 


    Fix Transparentizer and/or TransparentCircle shader/shader graph. 
        Add cursor cutout to graph/Transparentizer. 
        Do something other than the current OverlapBoxNonAlloc to find in the way materials. 
            Somehow overlap cone? 
            Ideally want a cone with tip at camera and base as a circle around the player of whatever size you want. 
                Seems doable with enough raycasts? Any better ways? 
        Change hole size based on zoom. 
            Make hole bigger when you're closer. Looks weird otherwise. 
        Add offset to cutout so it doesn't point at PCs' feet. 
            Would have to scale based on zoom. Add a child object to PCs that is where the circle should be centered.
                Center of PC? Or a little higher maybe? 


    Finish map/scavenging system. 

    
    Use particle system for magic effects (and other stuff). 


    How to handle injury/pain? 
        Getting hit raises injury, which raises pain, which negatively affects stats. 
        You can use painkiller items to reduce pain and bring your stats back up.
        You can only lower injury by resting or being treated at home, not during combat. 
        Do a day system kind of like Stardew Valley? Like once a PC is injured, they can only be healed by waiting until the next day 
            (or whatever unit of time, could do something longer like weeks). 
        Or, similarly, healing could take a certain amount of time per injury point (affected by medical items/buildings/skilled PCs), and
            there is always the danger of being raided. So you don't want to have your whole team injured or you could easily get wiped out by a raid. 
            I like this one better. Still have day/night cycle, just don't do discrete day chunks like stardew. Go by healing rates. 


    Decide what to do with mouse drag movement. 
        Get rid of it. 
                OR
        Severely limit the camera's x-rotation so no shallow angles can be reached. Then the xz-plane based drag won't be too fast since you won't 
            be able to click too far away. 
                OR
        Keep x-rotation as is, and do screen position based dragging, with speed based on x-rotation and/or camera height, so it doesn't feel too slow when 
            you're zoomed out or close to the ground. 
        Third option seems best maybe. Just disabling for now and I'll decide later. 


    Item
        SOItem is the base class. Crafting, equipment, and usable items all inherit from it. ItemAmount is just a class with SOItem and int Amount. 
            SOInventory handles a list of ItemAmounts, and each type of item has an instance of it. Each inventory holds its own items, 
            but when you loot, organize them into their correct inventories. 
        Usable item
        Crafting item
            When you click on a crafting item in the inventory menu, it brings up a new (smaller?) screen that shows all the crafting recipes that you currently meet the 
                requirements for that use that item. The ones that you have all the items for won't be grayed out and you can click them to craft the item. 
                Can also go to crafting menu and choose by craftable item instead of by crafting item. 
        Equipment item
    Recipes
        Building and crafting recipes (all items can be crafted, SOItem inherits SORecipe) share a base class. 
            List<StatRequirement>, where StatRequirement holds SOStat and int. 
                Maybe don't do this one, doesn't really make sense and adds too much confusion/complexity. 
            List<StatRequirement>, Minimum single PC skills needed. 
                Keep this one, it makes sense. You only need one person to understand things enough to make a blueprint, then just direct everyone else to build it. 
                Or they could build it themselves and just take a long time. 
            List<RecipeCost>, SOItems and amounts needed to build/craft recipe. 
        Have separate types of building and crafting recipes, which require different skills to uncover. 
            That way you could get recipes that makes sense for the characters/skills you have.
            Like with a team of brute force strength types, you'd learn how to make big melee weapons and armor,
                and engineer types would learn advanced buildings and stuff. 
        Building
            Farm/garden
            Engineer
            Defense
            Morale (decoration, food prep, sanitation?)
        Crafting
            Medical
            Weapons and armor
            Tools
            Building materials? Or is that just tedious? Probably. 
                Maybe just occasional, special, unique ones. Like advanced stuff like circuit boards and batteries or something. 
            Vehicles? 


    Make starting base scene.
        Build something at the workbench.
            Make crafting system/menu. 
        Go to door to go to scavenging location map.
        Choose location.
        Go on scavenging raid there.
        Have end of raid screen with info about loot.
        Go back to home base.
        Build a new building, like another type of workbench or something for now. 
   

    Cancel loot animation when canceling looting. As it is it just keeps playing through even if you cancel or move away. 
        Might need to cancel actual looting too, don't want to get items if it gets canceled. 
        

    Don't use the GE/GEL scripts for audio manager. 
        Have the listener on the selected PC, and camera when none selected. And make each object the source of its own sounds, so you get 3D sound. 


    For pathfinding, went with Aron Granberg's A* package. Not working perfectly yet, but good, hopefully can fix it.
        Agents still get stuck between obstacles. Might make code to deal with getting stuck/incomplete paths. 
        Maybe just increase agent radius in the grid graph? But keep the actual characters the same size so they avoid gaps and corners better. 


FIX:


    Figure out how combat will work. 
        Like LS:DZ? 
        Or more free form TPS? 
        Probably more like RTS style, similar to LS:DZ. 
            Makes sense since you're controlling multiple people. 
            Can have some people scavenging, setting traps or doing whatever, and others fighting. 
            Don't want to have to constantly control fighters, or the others for that matter. 
            Maybe you can control currently selected PC, like aim and shoot/melee/loot. 
                The others do the task you set them to do, or fight or loot automatically. 
        Use Injury/Pain system instead of boring old HP. 
            Have PainInjuryManager : MonoBehaviour class and it has PlayerInjury and PlayerPain plain C# classes as member variables? 
            Pain rises equally with injury (both go from 0 - 100).
                Or could rise at lower rate depending on "pain tolerance" (based off endurance or whatever stat?). 
            Higher pain lowers your other stats (attack, def, speed, whatever). 
            Can use painkillers to temporarily lower pain, but it always comes back up to your injury level once they wear off. 
                Pain can only go as low as a certain percentage of injury bar. 
            Lower injury level (and with it, pain level) by resting or seeing a doctor. 
            Put Pain/Injury bars under each PC portrait icon in side bar. 
            For enemies, have similar system but Pain and injury are combined. Basically just HP, but they get weaker as the HP gets lower. 
        Stats?
            STATS (Still need to work these out)
                Scavenging - Affects quality of loot and loot time.
                Combat - Affects attack/resistance to injury/pain threshold/base defense ability and whatever combat stuff.
                    (Maybe split combat up into separate stats? I like the one simple stat though.)
                Survival - Affects skill with growing crops/gathering water/medical skill, defending/building base? Not sure.
                Stealth - How quickly enemies hear you while scavenging.
                Medical - Ability to lower PC's injury level quickly/on the spot.
                Science/Technology/Engineering - Ability to research/build more advanced building/crafting items/equip. 
                Injury - How injured you are. Rest to recover.
                    Affected by: Toughness/Constitution? 
                Morale - Affects all stats of all PCs. Affected by many factors (entertainment buildings, food/water levels, recent deaths, etc.). 
            DERIVED STATS (Still need to work these out)
                Pain - Pain level. Affect stats negatively.
                    Affected by: Injury level, Pain tolerance and certain items (painkillers, etc.).
                Pain tolerance - How fast your pain increases with your injury level.
                    Affected by: Combat, Survival?
                Attack Power - How effective your attacks are. Higher chance to hit, stronger melee hits, etc. = all add up to more DPS. 


    Figure out how scavenging will work. 
        Go around each level and loot the containers.
        Have some hidden containers that don't get outlined when you hover over them, but if you click you can still loot. 
            They'll look like places you could loot, but less obvious than the normal loot containers. 
            Instead of chests and boxes, they'll be in suspicious spots on the wall, or maybe inside mattresses, that kind of stuff. 
        Have unlimited inventory at home, but limited while scavenging.
            Scavenging inventory size depends on the size and number of wagons/trucks/whatever you have to carry stuff home. 
            Can build new vehicles and hauling equipment to increase scavenging inv size. 
                Also will allow you to bring more scavenging team members? That could be cool. 


    Figure out how travelling will work.
        Use a world map and choose the location? 
        Make a big map to explore. 
            Lots of different types of buildings. 
            Use procedural generation? 
        Once you choose a location, your team starts traveling there. You can watch them on the map.
            Possible to get attacked while team is away so don't always send your best fighters. 
            Can send multiple teams at the same time if you have enough PCs. 
            Finding/repairing/building vehicles increases your travel speed. 
        OR, Travel on the map in a simple "overworld" style to find new locations. Uncover the map as you explore.
            Choose to scavenge whichever buildings. Certain buildings have better loot, different types of buildings have different loot possibilites. 
            Maybe you can see enemies/mobs on map? Have to fight them if you run into them? They could be around buildings with really good loot. 
                Fight scenes could be the same as scavenging scenes, just outside and with more enemies and less loot containers. 
                Mob size on the map could be smaller the higher the combined stealth skill of your team is. 
        Fast travel to any location you've uncovered when leaving to scavenge.
        Occasionally find new, better locations to set up your home base. 
            When you move, you have all your old buildings, you can place them wherever.
            OR
            You start over building wise, but you caravan over all your food/water/item/materials. 


    Figure out how scene management will work. 
        How to instantiate all current PCs onto scene? 
            Scavenge scenes and home scene will be different. 
        FIX: Problem with instantiating multiple of same char. Might happen with different chars? 
            Can only select one of the many, either by clicking PCs or icons. The others give null reference. 
            Clicking any icon selects the one selectable PC. 
            Might not work with multiples of same PCItemSO. Need multiple SOs to go with multiple PCs? 
                This wont work for enemies, might be fine for PCs. 
    
    
    Redesign UI completely
        Do some research. Look at good UIs from games you've played. 


    BUILDING
    --------  
        FIX: Issues with placed buildings' colliders. Especially when rotating them. 
        Make border around building a variable in BuildingItemSO. Set amount, not percent of width/length.
        Make icons for build menu
            Take screenshots of buildings then convert to pixel art online?
        Make building system much more free and customizable than LS:DZ
            Able to build walls and expand buildings.
            Much bigger build area.
            More stardewy with the food/water
                Raise animals? Plant specific crops?
                Or just keep it simple?
            Have fun things to build to boost morale.
        Finish build system
            Build menu
                Have thin-ish menu on right side with buildings to select/category tabs
                Have a collapse/expand button so you can see more if you want
                Click on a building button in the UI to change currently selected prefab,
                    destroy old building instance, and instantiate the new one
            Make undo button on each building placed during each build session
                Clicking button refunds all materials and destroys building
                Buildings are locked in after leaving build mode
                You can "sell" them for some of the materials back anytime after leaving build mode
            Building follow mouse/placement
                Check to see if space already occupied
                    Make box cast larger so that there's room between buildings
            Build cost in materials per building
                Just have one general "building material" or have separate materials like wood, stone, metal, etc.?
            Have a "room score"/morale stat affected by certain buildings. Having nice furniture/decorations/entertainment stuff 
                increases this stat, which increases all other stats by some percentage. 
        Eventually unlock advanced building stuff, like generators and computerized machines, which will unlock advanced equipment/usable items. 
            Maybe need engineer/science type people? Or someone with high "int"? 


    UI/MENUS/GAME STATE/ACTION MAP/SCENE
    ------------------------------------
        Put UI in world space as children of Camera? Probably not, maybe later. 
            Plus you could do cool 3D UI stuff easier
            How to do text though? Can TextMeshPro work in world space like that?
        HUD
            Have PC selection side or top or bottom bar HUD
            ???

        Have SOUsableItem, SOCraftingItem, and SOEquipmentItem all inherit from SOItem.
            ItemAmount will store amount, so I can use SOInventory for all menus.
            In the inventory menu, the usable items tab will only show usable items, same for crafting items and equipment tabs. 
            Building and crafting have their own menus.
                I opens to inv, B to build, C to craft, etc. 
                    (rebindable and other control schemes eventually)
                Button corresponding to current tab (ie. I for inv) or escape key exits to play mode.
                Have tabs on the building and crafting menus, to sort them into different categories. 

        Map shows the areas you can scavenge/explore. 
            Not sure about this part yet. 

        ??? Have an event system component on each canvas, to have different "first selected"s.
            How to have a slot that was instantiated at runtime be the first selected?
                Do: public Button button; void Start(){ button.Select(); }
                Then only need one event system? Can I put it back with the input manager game object?


    FINISH CAMERA CONTROLLER
    ------------------------
        Have different rotation speeds for x and y axes. 
        Redo a bit based off "Strategy Game Camera: Unity's New Input System"? 
        Keep edge scrolling area pretty close to the edge of the screen. 
        Make edge scrolling smooth. 
            Smooth it by distance from edge. 
            Have two concentric borders. 
                Inside the inner one, no edge scrolling happens. 
                When it gets outside the inner one, it starts moving slowly (like 0.0001f * speed). 
                    Speed increases (linearly?) while going from inner to outer border. 
                By the time it reaches the outer one, it's going full speed (1f * speed). 
                Anything further out than the outer one, it's also full speed. 
                OR, just have the outer edge of screen be the outer border. 
            Normalize the direction vector, but still scale speed based on where mouse is between borders. 
        Make it still work if screen size changes during runtime. 
            Is using "scale with screen size" in the canvas enough? 
            Necessary to check screen size every frame? seems stupid. 
                Maybe check every 0.1f seconds or so to make it not too heavy? 
            Is there an event fired when screen size changes? That'd be much better. 
                Then just have CameraController listen for that event and reassign screenWidth/Height. 


    LOOTING/SCAVENGING
    ------------------
        Have a dust kicked up effect while looting, then it pops when done kinda thing 
            instead of a boring old timer. 


    PCs
    ---
        Store PCs in prefabs with data in components in separate child objects. 
        Store available PCs in a SO (Have a prefab list and an instance list). 
        Have bottom/top/side bar with PC icons. Click to select, double click to select and center camera on PC. 
        Make survivor AI for when they're idling at base. 
            Assign different AI's for PC's with different tasks (gardening, defense, etc...)
            Make 2 (or more) PCs play horse on basketball hoop.
                Random shot from random place, might miss, might make it.
                Following player tries same shot if previous player made theirs.
                Put little "HORSE" popup under each PC while playing. 


    COMBAT
    ------
        Finish combat system, using GO states. 
        Auto aim like the Last Stand, or free aim shooting? Free aim might be funner. 
        Make combat more actiony than the Last Stand. 
        Use unique weapons/traps. Not just guns and shit. 
            Ropes and nets to stop stupid enemies (ie zombies). 
            Gas and fire to make a fire wall to block enemies. 
            Knock over big things like shelves onto enemies. 
            Hit them with vehicles if there's outdoor levels. 
        Have injury and pain bars (instead of HP/health). 
            They go up together, but pain actually affects your stats (speed, aim, etc). 
            Alcohol/drugs/pain killers/medical equipment/mind-over-matter-focus can lower pain so you can fight longer, but you need to rest to recover injury bar. 
            Pain can only go as low as a certain percentage of injury bar. 
        Occasionally loot items from dead enemies, based on what they are? Military style enemy gives weapons, normal enemies give maybe boring crafting items? 
            Still need to decide who the enemies will be (zombies, humans, aliens, fantasy?) before making concrete decisions. 


    MAP/SCAVENGING LOCATION SELECTION
    ---------------------------------
        Make "world map" where you can choose where to scavenge next, click and it will take you there.
        Maybe have fog covered map to begin with, then you explore in a kind of mini game.
            Uncover fog as you walk around wherever you want.
            Find grocery stores, gun shops, police stations, hospitals, hardware stores, other useful locations.
            Search any building you want, different building types will have different types of items. 
        Can get vehicles eventually for faster travel.
        Can fast travel to any uncovered location.
        Have random ambushes while traveling? Would that be fun or just annoying?


    SCAVENGING LOCATIONS    
    --------------------
        Make enemies spawn, more and more enemies as time goes on until you have to leave or be overwhelmed and die.
            Have a stealth stat, and the combined stealth of the scavenging team determines how fast the enemies come?
        Design the levels, with different layouts for different strategies. Add loot containers: Boxes, shelves, vehicles, whatever.


    TRANSPARENCY
    ------------
        Fix to work with polygon assets. 
        Maybe tweak the lerp in fade coroutine to be a bit smoother?
        Like the comments from CameraControllerFollower


    DESIGN PROTOTYPE SCENES/MENUS
    -----------------------------
        Home base scenes
            Building
            Crafting
            Base Defense/Combat
        Scavenging scenes
            Combat
            DONE - Looting
            World Map? (for choosing where to scavenge)
        Team Management
            Inventory
            Equipment
            Leveling
        Save System
            Use the one from Better RPG, for now at least


    MAKE/GET PROTOTYPE ASSETS
    -------------------------
        KEEP TRACK OF WHERE ASSETS CAME FROM, WHO MADE THEM, LICENSES, ETC.!!!
        characters/animations from Mixamo for now
        buildings/walls/roofs/floors/decoration stuff from itch.io and Unity Store
        

        
---------------------------------------------------------------------------------------------------------


    DONE:


    COMBAT
    ------
        RunToEnemy and Combat states mostly working. 
        PCs can "shoot" enemies, and enemies can melee attack PCs for now. Add more attacks later. 
        Placeholder models/animations for now, deal with art later. 


    CAMERA
    ------
        Pretty happy with camera setup
        Have camera on a follower object that follows the camera leader object.
        Camera leader is controlled directly, follower follows with SmoothDamp so it's smooth.
        Can move with WASD/Arrow keys, edge scrolling, rotate while holding middle mouse button, and zoom with mouse wheel.
        Objects between currentlySelectedPC and camera or between mouse position and camera are made temporarily transparent. 
            Can click on ground/PCs/containers/enemies behind objects too.


    MOVEMENT/STATE MACHINE 
    --------
        Select PC with PCSelector by left clicking on PC.
        Move/loot/eventually attack by clicking on ground/container/enemy while PC selected.
        State machine with movement and looting states. 
            States are child GO's on each PC. 
            Selected substate on each state object to handle input. 
            NotSelected substate handles automatic transitions between states (ie. Go to combat state when you get attacked). 
         

    BUILDING 
    -------- 
        Basic menu
        Can select buildings from menu
        Buildings stored in SO, which stores building prefab
        Building manager instantiates prefab and it follows mouse position on ground
        Can rotate building with Q/E, snap to nearest 45 degree angle with shift. 
        Constantly checks if building is colliding with other objects, to see if you can place it in its current position.
        Clicking in allowed place places the building and instantiates another to move with mouse (with same rotation)


    SCAVENGING
    ----------
        Can loot containers
        Starts a timer when you loot, get items at the end of timer if not cancelled.
        Can cancel looting by moving or looting a different container (eventually also if you attack or get hit). 


    INVENTORY
    ---------
        Basic menu and inventory slot
        Shows what's in your inventory, but can't use items yet.
        Items are SO's, stored in InventorySO. 



---------------------------------------------------------------------------------------------------------


                                             GAME OVERVIEW
                                             -------------


    The Last Stand: Dead Zone / Stardew Valley / Fallout inspired
    Post-apocalyptic setting
    Base-building (Home base)
    Crafting (Base building stuff and equipment/items)
    Tower Defense (Home base defense)
    Pausable "Real-Time" combat? (On scavenging runs and while defending home base)
    RPG (survivors have stats/levels)
    Permadeath, survivors can/will die. New ones can be found/rescued/find you.
        Make difficulty kinda high, so survivors die. Make it part of the game flow. 
        You can (automatically?) retrieve dead characters stuff.



                                               GAMEPLAY
                                               --------


    SETTING/BACKGROUND STORY
    ------------------------
        Aftermath of evenly matched war with aliens. Both sides mostly destroyed. 
            Still post-apocalyptic base builder. 
            Can have cool alien technology/enemies. And human warlords/bandits and wild earth animals. 
            Have it way in the future so you can have cool new earth animals/technology? 
        OR, Crash landed on alien planet. Could go with above idea. 
            Could find items to help you learn the alien language and eventually interact with them.
                They could join your team.
        OR, Aftermath of an epic battle between gods. Could have all sorts of creatures/beings. 
            Could maybe incorporate prayer/culty shit with the gods? Maybe, later. 
            Could have regular attacks by cults of the old gods. Your base could be the ones who say fuck the gods, they fucked us. 
            Maybe have it like the biblical apocalypse, where a bunch of people just disappear suddenly. 
        OR, Far future, and some technology has wiped us out (AI, some other-dimensional nonsense, whatever). 
        OR, (mixed with above ideas to keep it interesting and not boring old earth or zombies), start as a survival nut 
            kind of person who is locked in their bunker after shit went down. You have some decent supplies like food, water, and some weapons 
            and other stuff.
            But it's a small shelter so you don't want to stay there too long. 
            This could be a good place for a tutorial too. Just teach the basics in the bunker, then in the next location they learn farming and stuff. And so on. 
            You start going out to find survivors and meet random (or not random) people (or not people), some are good, some are bad. 
            You can have good ones join you, but sometimes they will turn out bad and sabotage you at your home base later maybe. 
            You can scavenge for food and supplies, or go hunting to get more food but no supplies. 

    MANAGE A HOME BASE
    ------------------
        Build defenses against alien/demon/zombie/bandit/whatever raids. 
            Also repair damaged stuff after raids. 
        Build rain catchers/gardens/cattle areas for food and water. 
        How Stardewy do I want to go? 
            Want to focus more on the happy life in the base and have the motivation for going out scavenging be to improve home base life. 
                A lot more cheerful colorful vibe at home, and dark and scary out scavenging. Almost like two different games. Stardewy at home, scary and deadly outside. 
                Sometimes the two worlds mix when the home base gets raided. 
            Focus more on base building than LS:DZ. 
                Could even have a cooking skill, and cooking equipment and go with that. Getting pretty complex, but whatever. 
            Can move to new bases when you find new locations. 
                Prisons, schools, military complexes, police stations, etc. 
                Keep old buildings or start from scratch? Scrap old buildings for materials? 
                Have to make farm land at new place. Make sure to have enough food stored to last. 
                Make multiple base locations with unique features for each. 
                Find them by exploring. 
                How to handle moving? Maybe a minigame where you fight off invaders while moving stuff in big trucks or something? 
                    How well you do determines how much stuff survives the trip?
                Or just do easy automatic move? 
            Decorate base to boost morale. 
                Have lots of decorations/entertainment stuff. 
                Don't need a bed per survivor like LSDZ, but it affect morale a lot. So have many comfortable beds and little sleeping areas. 
            Food/Farming
                Have survivors plow and plant food, each unit of ground that is planted and growing produces 
                    a certain amount of food per hour. 
                Each survivor consumes a certain amount of food per hour. 
                You can store food. 
                    Should it go bad eventually? Then you could build fridges to keep it longer?
                    Freezing would lower quality but then keep indefinitely. 
                Have different types of food. 
                    Good ones boost morale? 
                    Having a bigger variety boosts morale. 
                    Foods could have different properties:
                        Quality = flavor * freshness
                        Flavor (higher gives higher morale boost)
                            OR, each PC could have randomized tastes, and they get individual flavor ratings for each.
                            Like, give each food a flavor integer from 0 - 10 (11 choices on purpose, to allow a neutral middle one). Then each PC gets a randomized dictionary 
                                or list of custom class (FoodItem food, int tasteModifier). Then your distance from the flavor integer, 
                                modded to be in (-5, 5) (or maybe somethine like (-3, 7) to make the average positive?), and that's how much they like the food. Easy. 
                            Could be a cool system if done right. Then you'd want to optimize your farms/gardens to make the whole team happy.
                                Or maybe you'd set it up to make your most powerful PCs happy and let the rest just deal with it. 
                        Freshness (affected by time, freezing, affects quality)
                        Rarity (better foods harder to find, at least sometmes)
                        Growability (some foods are harder to grow, and a higher percentage of them die. Better farmers can have better success/grow harder foods)

                
    

    MANAGE TEAM OF SURVIVORS
    ------------------------
        Each have their own talents
            Crafting/Building, Farming, Fighting, Scavenging, Doctor, Engineer, Scientist, etc.
        No main character? Not sure yet
        Control survivors by clicking on them then giving orders
            Move camera with WASD/arrow keys? and edge scrolling?
        Characters can die in combat/from disease/from starvation/thirst
        Can get new characters
            While out exploring/scavenging
            Randomly new ones can show up to your home base
        Eventually make characters levelable


    BUILD/CRAFT EQUIPMENT/ITEMS/BUILDING STUFF/RESOURCE STUFF (FARMS, ETC.)
    -----------------------------------------------------------------------
        Find materials/resources from scavenging, looting dead bodies, and producing them at home
        Make Weapons, Armor, Building materials, Tools, Base Defenses, Vehicles, etc.


    EXPLORE/SCAVENGE
    ----------------
        Go exploring different locations
            Maybe based on your vehicle?
        Loot locations while fending off enemies (Last Stand: Dead Zone kind of)
        Assemble team before going out
            Bring fighters and scavengers, maybe people with other skills?


    COMBAT
    ------
        Control your available characters individually by clicking them and giving orders
        Same combat on scavenging runs as during home base defense
            Slightly more like tower defense during home base defense (can have turrets, etc.)
        Can pause combat to assess the situation, why not?
        Not sure of enemy types yet. Zombie apocalypse? Bandit style? Military enemies? Aliens? 
        Have injury and pain bars
            They go up together, but pain actually affects your stats (speed, aim, etc)
            Alcohol/drugs/pain killers/medical equipment can lower pain so you can fight longer, but you need to rest to recover injury bar
            Pain can only go as low as a certain percentage of injury bar
        Have melee fighters keep enemies at bay, while ranged shoot at them and looters loot. 
            Have other "types" of fighters? Tanks, healers, "mage" types, etc? Not at first at least.
    


    STATS (Still need to work these out)
    ------------------------------------
        Scavenging - Affects quality of loot and loot time.
        Combat - Affects attack/resistance to injury/pain threshold/base defense ability and whatever combat stuff.
            (Maybe split combat up into separate stats? I like the one simple stat though.)
        Survival - Affects skill with growing crops/gathering water/medical skill, defending/building base? Not sure.
        Stealth - How quickly enemies hear you while scavenging.

        Injury - How injured you are. Rest to recover.
        Pain - Pain level. Affect stats negatively. Affected by injury level and certain items.
        Morale - Affected by food/water levels and quality, morale boosting buildings, time since team member's death, etc. 
            Affects all the stats of all PCs? Have it as a collective stat or separate for each PC? 


    DERIVED STATS (Still need to work these out)
    --------------------------------------------
        Pain threshold - How fast your pain increases with your injury level.
            Affected by: Combat, Survival?
        Medical - Ability to lower PC's injury level quickly/on the spot.


    UI
    --
        Menus 
        (Maybe combine some of these so there's not so many, 
        like character status/equipment or inv/build or inv/craft)
            Inventory
            Equip
            Build
            Craft
            Journal/Quest thing?
            Map
            Main/Esc/Pause Menu
                General Game Stats (Maybe work this in with the save system)
                    Time played
                    Enemies (of each type) killed
                    Things built/crafted
                    All sorts of shit, everything.
            Base Status
                Food/Water production/use
                Defense?
                Morale?
            Character Statuses
                Morale
                Combat/Scavenging Stats
                Equipment
    

    FISHING MINIGAME
    ----------------
        Obviously. 
    
    
    PETTING DOGS/CATS/WHATEVER ANIMAL
    ---------------------------------
        Also obviously. 
     
     
     
    ------------------------------------------------------------------------------------------------------

    FIXED:

            If you click on another PC while there is already one selected, sometimes both end up selected.
            Not exactly sure why it happens, doesn't always happen. 
            Who is in charge of deselecting the previous PC? PCSelector?         
        The problem is that PCSelector's _currentPCInstance is getting set to null anytime you click anything that isn't a PC, 
        because it was SelectedSubstate's OnDisable was getting called anytime the selected PC switched superstates, which was nulling out the 
        current PC reference in PCSelector. 
        Moving it to NotSelectedSubstate's OnEnable made it slightly better, but it still gets called if you select a new PC while your old one is finishing 
        something, because once it's done its NotSelectedSubstate will call OnEnable and set PCSelector's current PC to null, letting you select a second PC. 
        HOW TO FIX???
        Maybe send a signal only if you right click while a PC is selected and idle. 
        Otherwise, current PC should just get changed, not nulled, and only if clicking a different PC. 
        THAT SEEMS TO HAVE FIXED IT! Sending event from SelectedIdleSubstate to PCSelector and Transparentizer to set their
            current PC instances to null. Only way it gets sent to null now. 
         
     
        Update not getting called in PlayerState classes, specifically PlayerApproachLootState. Not sure why, maybe PlayerState is messing 
            inheritance up somehow? 
        FIXED BY MAKING THE STATEMACHINE UPDATE (AND FIXEDUPDATE) PUBLIC VIRTUAL AND THE PLAYERCONTROLLER ONES PUBLIC OVERRIDE.
            WAS ACCIDENTALLY HIDING IT BY CALLING PRIVATE ON BOTH. 

                Fix jittery navmesh movement. 
        Maybe try using NavMesh.Calculate path to get the points of the path, then use rigidbody or whatever to do the actual movement? 
        FIXED BY MAKING PATHNAVIGATOR IN PLACE OF NAVMESHAGENT. 

                Having problems with enemy recalculating path to PC too often and wobbling around. 
        FIXED BY ONLY RECALCULATING WHEN ENEMY MOVES A CERTAIN AMOUNT OR GETS CLOSE TO YOU. 

                Pathfinding working pretty well, enemies still get caught on corners sometimes, find a way to increase edge radius or something? 
        FIXED BY INCREASING COLLIDER RADIUS (FROM 2 TO 2.5) ON PATHFINDER OBJECT. RADIUS ABOVE THREE BROKE THINGS. 

                PC automatically switching back to going toward the enemy when walking to a location. Maybe it still has the enemy
            transform? 
        FIXED BY SETTING DESTINATIONCOLLIDER AND DESTINATIONTRANSFORM TO NULL WHEN PASSING IN A NULL DESTINATIONCOLLIDER. 

            When starting scene with multiple enemies, half or so are getting null reference exceptions in the EnemyApproachPlayerState constructor
        on the _pathNavigator.TravelPath() method, even though debug statements say all the relevant references are NOT null. 
        It's the same enemies that work each time, so it's not related to the random index. 
        Same thing happens with 2, 4, and 6 enemies. Might be position related? Nope. 
        FIXED BY CHANGING PATHNAVIGATOR'S INITIALIZATION FROM START TO AWAKE, SINCE SEEKER.STARTPATH WAS GETTING CALLED FROM ENEMYAPPROACHPCSTATE'S START METHOD
            SO IT WAS A RACE CONDITION OR SOMETHING. 


        ----------------------------------------------------------------------------------------------------------

        NOTES:

        Using UnityEditor in SOCraftableItems and SOBuildingRecipes classes to get list. Either run method right before building, 
            or find another way without using UnityEditor. 